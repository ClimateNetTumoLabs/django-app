name: Deploy on push staging

on:
  push:
    branches:
      - staging

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy in EC2 and execute commands
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.TEST_HOST }}
          USERNAME: ${{ secrets.TEST_USERNAME }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

        run: |
          set -euo pipefail  
          trap 'exit 0' EXIT 

          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key

          ssh -o StrictHostKeyChecking=accept-new -i private_key ${USERNAME}@${HOSTNAME} "
            sudo apt update && \
            cd /home/ubuntu/django-app/climatenet && \
            git stash && \
            git checkout staging && \
            git pull origin staging && \
            
            if [ ! -f .env ]; then
              echo \"DATABASE_HOST=${DATABASE_HOST}\" > .env
              echo \"DATABASE_NAME=${DATABASE_NAME}\" >> .env
              echo \"DATABASE_USER=${DATABASE_USER}\" >> .env
              echo \"DATABASE_PASSWORD=${DATABASE_PASSWORD}\" >> .env
              echo \"Created .env file\"
            else
              echo \".env exists\"
            fi

            source venv/bin/activate && \
            pip install -r requirements.txt && \
            python manage.py collectstatic --noinput && \
            python manage.py makemigrations --empty backend && \
            python manage.py migrate && \
            sudo systemctl daemon-reload && \
            sudo systemctl restart gunicorn && \
            sudo systemctl restart nginx
          "
