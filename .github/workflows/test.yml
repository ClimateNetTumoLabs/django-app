name: Deploy on push dev # Description: This workflow triggers deployment when code is pushed to the staging branch

on:
  push:
    branches:
      - dev  # Trigger: Deploy when pushing changes to the staging branch
jobs:
  Deploy:
    runs-on: ubuntu-latest  # Specify the operating system for the job
    steps:
      - name: Deploy in EC2 and execute commands  # Step: Deploy code and execute commands on the EC2 instance
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Environment variable: SSH private key
          HOSTNAME: ${{ secrets.EC2_IP }}  # Environment variable: Hostname of the EC2 instance
          USERNAME: ${{ secrets.EC2_USERNAME }}  # Environment variable: SSH username
          DEPLOY_EXIT_CODE: ${{ steps.Deploy.outputs.exit_code }}

        # SSH into the EC2 instance and execute commands
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key 
          ssh -o StrictHostKeyChecking=accept-new -i private_key ${USERNAME}@${HOSTNAME} '
          
          sudo apt update && \
          cd /home/ubuntu/django-app/climatenet && \
          git stash && \
          git checkout dev && \
          git pull origin dev && \
               
          source venv/bin/activate && \
          pip install -r requirements.txt && \
               
          python manage.py collectstatic --noinput && \
          python manage.py migrate && \
          python manage.py makemigrations && \
          
          sudo systemctl daemon-reload && \
          sudo systemctl restart gunicorn && \
          sudo systemctl restart nginx'

      - name: Check for deployment errors
        if: ${{ steps.Deploy.outputs.DEPLOY_EXIT_CODE != 0 }}
        run: |
          echo "An error occurred during deployment! (Exit Code: ${{ steps.Deploy.outputs.DEPLOY_EXIT_CODE }})"
          # Add additional logic here, like sending notifications or failing the workflow