name: Deploy on push staging

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Conecting via SSH
        env:
          TEST_SSH_KEY: ${{ secrets.TEST_SSH_KEY }}
          TEST_HOST: ${{ secrets.TEST_HOST }}
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
        run: |
          echo "${{ env.TEST_SSH_KEY }}" > test_key.pem
          chmod 600 test_key.pem
          ssh -o StrictHostKeyChecking=no -i test_key.pem ${{ env.TEST_USERNAME }}@${{ env.TEST_HOST }}

      - name: Git Checkout and Pull
        env:
          TEST_SSH_KEY: ${{ secrets.TEST_SSH_KEY }}
          TEST_HOST: ${{ secrets.TEST_HOST }}
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
        run: |
            ssh -o StrictHostKeyChecking=no -i test_key.pem ${{ env.TEST_USERNAME }}@${{ env.TEST_HOST }}
            sudo apt update && \
            cd /home/ubuntu/django-app/climatenet && \
            git checkout staging && git stash && git pull origin staging

      - name: Check Virtual Environment and Install Dependencies
#        env:
#          TEST_HOST: ${{ secrets.TEST_HOST }}
#          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
        run: |
            'if [ ! -d venv ]; then
              python3 -m venv venv && 
            fi
            source venv/bin/activate && \
            pip install -r requirements.txt'

      - name: Restart Nginx
#        env:
#          TEST_HOST: ${{ secrets.TEST_HOST }}
#          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
        run: |
            'sudo systemctl restart nginx'

      - name: Collect Static and Restart Gunicorn
#        env:
#          TEST_HOST: ${{ secrets.TEST_HOST }}
#          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
        run: |
            'python3 manage.py collectstatic --noinput && \
            sudo systemctl daemon-reload && \
            sudo systemctl restart gunicorn.service'
